extend layout

block content
    .header
      h1 #{title} Inspector
      h2 Developers' Tool for Save Data Editing
    .content
      h2.content-subhead Upload Your Save Data
      form(id="upload-form", name="upload-form", class="pure-form pure-form-aligned" method="post", action="/savedata")
          input(id="datafile", name="datafile", type="file", size="40", accept="dat", class="pure-button")
          input(id="upload", name="upload", type="submit", class="pure-button pure-button-primary" value="upload") 

      h2.content-subhead Global Variables
      table.pure-table.pure-table-vertical
        thead
            tr
              th Political Capital
              th Total Funds
              th Time in Game Play
          tbody
            tr
              td 
                input(type="text", id="political_capital", class="scores" value="#{info.political_capital}")
              td 
                input(type="text", id="funds", class="scores" value="#{info.funds}")
              td 
                input(type="text", id="gametime", class="scores" value="#{info.time}")
    
      h2.content-subhead Regional Variables
      table.pure-table.pure-table-striped
        thead
            tr
              th 
                - for (var region_id in info.regions) {
                    th= mappings.regions_dict[region_id]
                - }
          tbody
            tr(id="region-status")
              td Unlocked?
                - for (var region_id in info.regions) {
                    td(class="toggleable")
                      - if (info.regions[region_id].active) {
                          input(id="region-#{region_id}-status", type="checkbox", checked)
                          img(src="/images/icons/tick-icon.png")
                      - } else {
                          input(id="region-#{region_id}-status", type="checkbox")
                          img(src="/images/icons/cross-icon.png")
                      - }
                - }
            tr(id="economy")
              td Economy
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-economy", type="number", min="-100", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.EC}")
                - }
            tr(id="environment")
              td Environment
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-environment", type="number", min="-100", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.EN}")
                - }
            tr(id="technology")
              td Technology
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-technology", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.TECH}")
                - }
            tr(id="green-sentiment")
              td Green Sentiment
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-green-sentiment", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.GREEN}")
                - }
            tr(id="gross-domestic-product")
              td GDP
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-gross-domestic-product", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.GDP}")
                - }
            tr(id="income-equality")
              td Income Equality
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-income-equality", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.EQ}")
                - }
            tr(id="purchasing-power")
              td Purchasing Power
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-purchasing-power", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.PP}")
                - }
            tr(id="donations")
              td Donations
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-donations", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.DONATION}")
                - }
            tr(id="CO2-emission")
              td CO2 Emission
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-co2-emission", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.CO2}")
                - }
            tr(id="air-pollution")
              td Air Pollution
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-air-pollution", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.AP}")
                - }
            tr(id="water-pollution")
              td Water Pollution
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-water-pollution", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.WP}")
                - }
            tr(id="land-pollution")
              td Land Pollution
                - for (var region_id in info.regions) {
                  td 
                    input(id="region-#{region_id}-land-pollution", type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.LP}")
                - }


      h2.content-subhead Regional Information
      - for (var region_id in info.regions) {
        - if (region_id == 0) continue;
          div.clear(style="clear:both")
          div(class="region-info", id="region-#{region_id}")
            h3.content-subhead(class="menu-toggle")= mappings.regions_dict[info.regions[region_id].id]
            .pure-menu.pure-menu-open.pure-menu-horizontal
              ul(class="region-menu")
                li.pure-menu-selected
                  a(href='javascript:void(0);', class="menu-option", rel=".table-bases") Bases
                li(style="display: none;")
                  a(href='javascript:void(0);', class="menu-option", rel=".table-upgrades") Upgrades
                li.pure-menu-selected
                  a(href='javascript:void(0);', class="menu-option", rel=".table-events") Events
                li.pure-menu-selected
                  a(href='javascript:void(0);', class="menu-option", rel=".table-history") History

            div.horizontal-container

              div.table-bases
                h4.content-subhead.small Bases
                table.pure-table.pure-table-striped
                  thead
                    tr
                      th(class="hide")= "Key"
                      th= "Title"
                      th= "Status"
                      th= "Location"
                    tbody
                      - var bases = mappings.regions_bases[region_id]
                      - for (var index in bases) {
                        - var base = bases[index]
                        tr(class="#{base.key}")
                          td(class="key hide")= base.key
                          td(class="title")= mappings.bases_dict[base.key]
                          td(class="status toggleable")
                            - if (base.active) {
                                input(type="checkbox", checked)
                                img(src="/images/icons/tick-icon.png")
                            - } else {
                                input(type="checkbox")
                                img(src="/images/icons/cross-icon.png")
                            - }
                          td(class="location")
                            input(type="text", value="(#{base.x}, #{base.y})", class="coordinates")
                      - }

              div.table-upgrades
                h4.content-subhead.small Upgrades
                table.pure-table.pure-table-striped
                  thead
                    tr
                      th(class="hide")= "Key"
                      th= "Title"
                      th= "Status"
                    tbody
                      - var bases = mappings.regions_bases[region_id]
                      - for (var i in bases) {
                          - var base = bases[i];
                          - var upgrades = mappings.bases_upgrades[base.key];
                          - for (var index in upgrades) {
                            - var upgrade = upgrades[index]
                              tr(class="#{upgrade.key}")
                                td(class="key hide")= upgrade.key
                                td(class="title")= mappings.upgrades_dict[upgrade.key]
                                td(class="status toggleable")
                                  input(type="checkbox")
                                  img(src="/images/icons/cross-icon.png")
                          - }
                      - }


              div.table-events
                h4.content-subhead.small Events
                table.pure-table.pure-table-striped
                  thead
                    tr
                      th(class="hide")= "Key"
                      th= "Title"
                      th= "Status"
                      th= "Location"
                    tbody
                      - var events = mappings.regions_events[region_id]
                      - for (var index in events) {
                        - var event = events[index]
                        tr(class="#{event.key}")
                          td(class="key hide")= event.key
                          td(class="title")= mappings.events_dict[event.key]
                          td(class="status toggleable")
                            - if (event.active) {
                                input(type="checkbox", checked)
                                img(src="/images/icons/tick-icon.png")
                            - } else {
                                input(type="checkbox")
                                img(src="/images/icons/cross-icon.png")
                            - }
                          td(class="location")
                            input(type="text", value="(#{event.x}, #{event.y})", class="coordinates")
                      - }
              div.table-history 
                h4.content-subhead.small History &nbsp;
                  i.fa.fa-plus.add-history
                table.pure-table.pure-table-striped
                  thead
                    tr
                      th= "Time"
                      th= "Status"
                      th(class="hide")= "Key"
                      th= "Title"
                      th= ""
                    tbody
                      // -|| dynamicall loaded with javascript
                      // - for (var key in info.regions[region_id].history) {
                      //     tr(class="#{key}")
                      //       - var value = info.regions[region_id].history[key]
                      //       td
                      //         input(type="number", min="0", step="0.1", class="scores" value="#{key}")
                      //       td(class="toggleable")
                      //         - if (value.substring(0, 1) == '+') {
                      //             input(type="checkbox", checked="checked")
                      //             img(src="/images/icons/tick-icon.png")
                      //         - } else {
                      //             input(type="checkbox", checked="unchecked")
                      //             img(src="/images/icons/cross-icon.png")
                      //         - }
                      //       td(class="hide")
                      //         span(contenteditable="false", class="node-key") #{value.substring(1)}
                      //       td
                      //         select(class="node-options")
                      //       td
                      //         img(src="/images/icons/minus-icon.png", alt="delete")
                      // - }
      - }

      h2.content-subhead 
      form(id="save-form", name="save-form", class="pure-form pure-form-aligned")
        input(id="save", name="save", type="button", size="40", class="pure-button pure-button-primary" value="save")


    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js')
    script(src='/javascript/savedata.js')
    script(type='text/javascript').
      var mappings = !{JSON.stringify(mappings)};
      var info = !{JSON.stringify(info)};
      $(this)._start(info, mappings);
      $(".toggleable").toggleable();
      $(".scores").scores();
      $(".region-info").menuify(mappings);
      $(".region-info").historify(info.regions, mappings);
      $(".table-history tbody tr").sorted();
      $(this)._end();
