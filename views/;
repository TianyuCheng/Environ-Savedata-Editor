extend layout

block content
    .header
      h1 #{title} Inspector
      h2 Developers' Tool for Save Data Editing
    .content
      h2.content-subhead Upload Your Save Data
      form(id="upload-form", name="upload-form", class="pure-form pure-form-aligned" method="post", action="/savedata")
          input(id="datafile", name="datafile", type="file", size="40", accept="dat", class="pure-button")
          input(id="upload", name="upload", type="submit", class="pure-button pure-button-primary" value="upload") 

      h2.content-subhead Global Variables
      table.pure-table.pure-table-vertical
        thead
            tr
              th Political Capital
              th Total Funds
              th Time in Game Play
          tbody
            tr
              td 
                input(type="text", class="scores" value="#{info.political_capital}")
              td 
                input(type="text", class="scores" value="#{info.funds}")
              td 
                input(type="text", class="scores" value="#{info.time}")
    
      h2.content-subhead Regional Variables
      table.pure-table.pure-table-striped
        thead
            tr
              th 
                - for (var region_id in info.regions) {
                    th= mappings.regions_dict[region_id]
                - }
          tbody
            tr
              td Unlocked?
                - for (var region_id in info.regions) {
                    td(class="toggleable")
                      - if (info.regions[region_id].active) {
                          input(type="checkbox", checked)
                          img(src="/images/icons/tick-icon.png")
                      - } else {
                          input(type="checkbox")
                          img(src="/images/icons/cross-icon.png")
                      - }
                - }
            tr
              td Economy
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="-100", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.EC}")
                - }
            tr
              td Environment
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="-100", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.EN}")
                - }
            tr
              td Technology
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.TECH}")
                - }
            tr
              td Green Sentiment
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.GREEN}")
                - }
            tr
              td GDP
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.GDP}")
                - }
            tr
              td Income Equality
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.EQ}")
                - }
            tr
              td Purchasing Power
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.PP}")
                - }
            tr
              td Donations
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.DONATION}")
                - }
            tr
              td CO2 Emission
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.CO2}")
                - }
            tr
              td Air Pollution
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.AP}")
                - }
            tr
              td Water Pollution
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.WP}")
                - }
            tr
              td Land Pollution
                - for (var region_id in info.regions) {
                  td 
                    input(type="number", min="0", max="100", step="0.5", class="scores" value="#{info.regions[region_id].scores.LP}")
                - }


      h2.content-subhead Regional Information
      - for (var region_id in info.regions) {

          div.clear(style="clear:both")
          h3.content-subhead= mappings.regions_dict[info.regions[region_id].id]
          .pure-menu.pure-menu-open.pure-menu-horizontal
            ul
              li
                a(href='javascript:void(0);', class="menu-option", rel=".table-bases") Bases
              li
                a(href='javascript:void(0);', class="menu-option", rel=".table-upgrades") Upgrades
              li
                a(href='javascript:void(0);', class="menu-option", rel=".table-events") Events
              li.pure-menu-selected
                a(href='javascript:void(0);', class="menu-option", rel=".table-history") History

          div.horizontal-container
            div.table-bases
              table.pure-table.pure-table-striped
                thead
                  tr
                    th= "Key"
                    th= "Title"
                    th= "status"
                  tbody
                    - for (var base in mappings.regions_bases[region_id]) {
                        tr
                          td
                            span #{base['key']}
                        - console.log(base)
                          td= mappings.bases_dict[base.key]
                          td= base.active
                    - }
            div.table-upgrades
            div.table-events
            div.table-history
              table.pure-table.pure-table-striped
                thead
                  tr
                    th= "Time"
                    th= "Status"
                    th(class="hide")= "Key"
                    th= "Title"
                    th= ""
                  tbody
                    - for (var key in info.regions[region_id].history) {
                        tr
                          - var value = info.regions[region_id].history[key]
                          td
                            span(contenteditable="true") #{key}
                          td(class="toggleable")
                            - if (value.substring(0, 1) == '+') {
                                input(type="checkbox", checked)
                                img(src="/images/icons/tick-icon.png")
                            - } else {
                                input(type="checkbox")
                                img(src="/images/icons/cross-icon.png")
                            - }
                          td(class="hide")
                            span(contenteditable="false", class="node-key") #{value.substring(1)}
                          td
                            select(class="node-options")
                          td
                            img(src="/images/icons/minus-icon.png", alt="delete")
                    - }
      - }

      h2.content-subhead 
      form(id="save-form", name="save-form", class="pure-form pure-form-aligned")
        input(id="save", name="save", type="submit", size="40", class="pure-button pure-button-primary" value="save")



    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js')
    script(src='/javascript/savedata.js')
    script(type='text/javascript').
      var nodes_dict = !{JSON.stringify(mappings)};
      $(".toggleable").toggleable();
      $(".scores").scores();
      $(".node-options").selectify(nodes_dict);
